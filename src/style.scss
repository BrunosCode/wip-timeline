@import "scss/variables";
@import "scss/mixins";
@import "scss/layouts";
@import "scss/animations";
@import "scss/utilities";

// Reset
*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: Helvetica, sans-serif;
}

.main {
  background-color: $gray-200;
  min-height: 100vh;
  padding-top: 4rem;

  @media screen and (min-width: 900px) {
    padding-top: 7rem;
  }
}
.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  padding: 1rem 2rem;
  z-index: 1;
  background-color: $gray-200;
  
  &__top {
    height: 2rem;
    margin-bottom: 1rem;
  }

  &__title {
    font-weight: 400;
    font-size: 1.5rem;
  }
}

.burger {
  display: block;
  cursor: pointer;
  border: none;
  background-color: inherit;
  height: 1.5rem;
  width: 1.5rem;
  
  &__bar1, 
  &__bar2, 
  &__bar3 {
    width: 100%;
    height: calc(100% / 2 / 3);
    background-color: $black;
    transition: 0.4s;
  }
  &__bar1, 
  &__bar2 {
    margin-bottom: 25%;
  }
  
  /* Rotate first bar */
  &--open &__bar1 {
    transform: translate(0, 250%) rotate(-45deg);
  }
  
  /* Fade out the second bar */
  &--open &__bar2 {
    opacity: 0;
  }
  
  /* Rotate last bar */
  &--open &__bar3 {
    transform: translate(0, -250%) rotate(45deg);
  }
}


.input {
  background-color: $white;
  color: $black;
  border: solid .1rem $white;
  font-family: Helvetica, sans-serif;
  margin-left: auto;
}
.label {
  background-color: $white;
  color: $black;
  text-align: center;
  @include btn-shape;
}

.btn {
  background-color: $white;
  color: $black;
  border: solid .1rem white;

  text-transform: uppercase;
  font-weight: 700;

  @include btn-shape;

  & .arrow {
    position: relative;
    border: solid black;
    display: inline-block;
    padding: .2rem;
    margin-left: .5rem;
  
    &.up {
      border-width: 0 .2rem .2rem 0;
      transform: translateY(-30%) rotate(45deg);
    }
    
    &.down {
      border-width: .2rem 0 0 .2rem;
      transform: translateY(30%) rotate(45deg);
    }
  }

  &:hover {
    cursor: pointer;
    background-color: $black;
    color: $gray-100;

    & .arrow {
      border-color: white;
    }
  }

}



.timeline {
  position: relative;

  // line
  &::before {
    content: "";
    position: absolute;
    width: .15rem;
    left: 0;
    top: 0;
    height: 100%;
    background-color: $black;
    transition: height 1s linear;
  }

  &__node {
    padding: 1rem .5rem;
    flex-grow: 1;
    // Globe
    &::before {
      position: absolute;
      right: 50%;
      transform: translateX(50%);
      width: 0;
      height: 0;
      @include node-circle;
    }
  }

  &__balloon {
    position: relative;
    background-color: $black;
    margin-left: 1rem;
    padding: 1rem 2rem;
    border-radius: 1rem;
    flex-grow: 1;
    // before animation
    transform: scale(0, 0);
    // Ballon pointer
    &::before {
      transform: translate(-50%, -50%) rotate(45deg) ;
      left: 0;
      @include balloon-pointer;
    }
  }

  @media screen and (min-width: 600px) {
    // line
    &::before {
      left: calc(50% - .075rem);
    }

    &__node {
      width: 50%;
      align-self: flex-end;
      
      // change node direction
      &:nth-of-type(even) {
        align-self: flex-start;

        // Globe other direction
        &::after {
          position: absolute;
          left: 50%;
          transform: translateX(-50%);
          @include node-circle;
        }
        &::before {
          display: none;
        }
        
        & .timeline__balloon {
          margin-right: 1rem;
          text-align: right;
      
          // Ballon pointer other direction
          &::after {
            right: 0;
            transform: translate(50%, -50%) rotate(45deg);
            @include balloon-pointer;
          }
          &::before {
            display: none;
          }
        }
      }
    }
  }

  &__title {
    color: $gray-100;
    font-weight: 400;
    margin-bottom: .5rem;
  }
  &__datetime {
    color: $red;
    font-weight: 700;
  }
}

.animate-in.timeline__node {
  
  // Animations
  // Circle
  &::before,
  &::after {
    width: 1rem;
    height: 1rem;
    transition: 1s;
  }
  // balloon
  & .timeline__balloon {
    transform: scale(1, 1);
    animation: fade-in 1.5s;
  }

}
